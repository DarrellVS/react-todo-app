{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAGjC,OACI,8BACI,kCACI,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SALjC,kBAAMJ,EAAWD,EAAKM,OAMnCN,EAAKO,UCNP,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACtC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAACD,EAAD,CAAoBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKM,O,YCF7BK,EAAoB,iBAmDXC,MAjDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBAoCpB,OAjCAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAGHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IA0BF,qCACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WAV5B,SAAoBK,GAClB,IAAMmB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAA1B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASW,MAOP,uBAAOE,IAAKZ,EAAab,KAAK,SAC9B,wBAAQ0B,QA1BZ,SAAuBC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MACpB,KAATxB,IACJO,GAAS,SAAAkB,GAAS,4BAAQA,GAAR,CAAmB,CAAE1B,GAAI2B,cAAU1B,KAAMA,EAAMH,UAAU,QAC3EW,EAAYe,QAAQC,MAAQ,OAsB1B,sBACA,wBAAQH,QAnBZ,SAA6BC,GAC3B,IAAMJ,EAAWhB,EAAMyB,QAAO,SAAAlC,GAAI,OAAKA,EAAKI,YAC5CU,EAASW,IAiBP,mCACA,gCAAMhB,EAAMyB,QAAO,SAAAlC,GAAI,OAAKA,EAAKI,YAAU+B,OAA3C,qBC9CNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b2bdfbaa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n    const handleTodoClicked = () => toggleTodo(todo.id)\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClicked} />\r\n                {todo.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\nimport TodoList from './TodoList'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todosApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  // Load Stored Todos\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  // Store todos upon array change\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  // Add a todo element to the todos array\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => [...prevTodos, { id: uuidv4(), name: name, complete: false }])\n    todoNameRef.current.value = null\n  }\n\n  // Clear completed todos from array\n  function handleClearComplete(e) {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  // Toggle a todo from complete to incomplete and vice versa\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  // Return a populated todolist and corresponding inputs\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearComplete}>Clear Completed Todos</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}